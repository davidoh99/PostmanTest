{
	"info": {
		"_postman_id": "8337febf-f475-4cd9-a402-06c7dd66a956",
		"name": "Pina Vida",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Random",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d8a14480-7469-419c-b4db-85cafb0f9a7f",
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData.results[0].gender).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].name.title).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].name.first).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].name.last).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.street.number).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.results[0].location.street.name).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.city).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.state).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.country).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.postcode).to.satisfy(function (postcode) {\r",
							"    if ((typeof postcode === \"string\") || (typeof postcode === \"number\")) {\r",
							"        return true;\r",
							"    } else {\r",
							"        return false;\r",
							"    }\r",
							"  });\r",
							"  pm.expect(jsonData.results[0].location.coordinates.latitude).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.coordinates.longitude).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.timezone.offset).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].location.timezone.description).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].email).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.uuid).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.username).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.password).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.salt).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.md5).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.sha1).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].login.sha256).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].dob.date).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].dob.age).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.results[0].registered.date).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].registered.age).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.results[0].phone).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].cell).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].id.name).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].id.value).to.satisfy(function (postcode) {\r",
							"    if ((typeof postcode === \"string\") || (typeof postcode === \"object\")) {\r",
							"        return true;\r",
							"    } else {\r",
							"        return false;\r",
							"    }\r",
							"  });\r",
							"  pm.expect(jsonData.results[0].picture.large).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].picture.medium).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].picture.thumbnail).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.results[0].nat).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.info.seed).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.info.results).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.info.page).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.info.version).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test data values of the response\", () => {\r",
							"  pm.expect(jsonData.results[0].gender).to.be.oneOf([\"male\", \"female\"]);\r",
							"  pm.expect(jsonData.results[0].name.title).to.be.oneOf([\"Mr\", \"Mrs\", \"Miss\", \"Ms\", \"Mademoiselle\", \"Monsieur\"]);\r",
							"  pm.expect(jsonData.results[0].name.first).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].name.last).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].location.street.name).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].location.city).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].location.state).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].location.country).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].location.postcode).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].location.coordinates.latitude).to.match(/^([-+]?\\d{1,2}[.]\\d+)/);\r",
							"  pm.expect(jsonData.results[0].location.coordinates.longitude).to.match(/\\s*([-+]?\\d{1,3}[.]\\d+)$/);\r",
							"  pm.expect(jsonData.results[0].location.timezone.offset).to.match(/[+-][0-9]{1,2}:[0-9]{2}\\b/);\r",
							"  pm.expect(jsonData.results[0].location.timezone.description).to.match(/\\p{L}+/gu);\r",
							"  pm.expect(jsonData.results[0].email).to.match(/\\p{L}@+\\p{L}/gu);\r",
							"  pm.expect(jsonData.results[0].login.uuid).to.match(/^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/);\r",
							"  pm.expect(jsonData.results[0].login.username).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].login.password).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].login.salt).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].login.md5).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].login.sha1).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].login.sha256).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.results[0].dob.date).to.match(/^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i);\r",
							"  pm.expect(jsonData.results[0].dob.age).to.match(/[0-9]{1,3}/);\r",
							"  pm.expect(jsonData.results[0].registered.date).to.match(/^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i);\r",
							"  pm.expect(jsonData.results[0].registered.age).to.match(/[0-9]{1,3}/);\r",
							"  pm.expect(jsonData.results[0].id.name).to.match(/^$|\\p{L}+/gu);\r",
							"  if (jsonData.results[0].id.name === \"\") {\r",
							"    pm.expect(jsonData.results[0].id.value).to.match(/null/);\r",
							"  }\r",
							"  pm.expect(jsonData.results[0].picture.large).to.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*).jpg/);\r",
							"  pm.expect(jsonData.results[0].picture.medium).to.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*).jpg/);\r",
							"  pm.expect(jsonData.results[0].picture.thumbnail).to.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*).jpg/);\r",
							"  pm.expect(jsonData.results[0].nat).to.match(/[A-Z]{2}/);\r",
							"  pm.expect(jsonData.info.seed).to.match(/[\\p{L}0-9]+/gu);\r",
							"  pm.expect(jsonData.info.results).to.match(/1/);\r",
							"  pm.expect(jsonData.info.page).to.match(/1/);\r",
							"  pm.expect(jsonData.info.version).to.match(/1.4/);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://randomuser.me/api/",
					"protocol": "https",
					"host": [
						"randomuser",
						"me"
					],
					"path": [
						"api",
						""
					]
				},
				"description": "https://randomuser.me/"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}